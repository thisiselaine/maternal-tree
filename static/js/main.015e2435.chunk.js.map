{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["data","name","children","id","gender","hasParnter","imageUrl","partnerId","noParent","isSource","props","state","layout","orientation","linkType","stepPercent","showOptions","nodeId","nodeName","nodeImageUrl","treeData","showNodeOptions","bind","updateTree","fetchNodeTree","this","setState","node","fetch","then","res","status","json","forceUpdate","catch","alert","isExpanded","origin","sizeWidth","sizeHeight","LinkComponent","width","height","margin","top","left","right","bottom","partners","innerWidth","innerHeight","x","y","Math","PI","min","LinkRadialStep","LinkRadialCurve","LinkRadialLine","LinkRadial","LinkVerticalStep","LinkVerticalCurve","LinkVerticalLine","LinkVertical","LinkHorizontalStep","LinkHorizontalCurve","LinkHorizontalLine","LinkHorizontal","style","color","fontSize","onClick","e","stopPropagation","onChange","target","value","disabled","type","max","step","LinearGradient","from","to","rx","fill","Group","Tree","root","hierarchy","d","size","separation","a","b","parent","depth","links","map","link","i","push","source","percent","stroke","strokeWidth","key","nodePartnerId","linkSource","filter","partner","undefined","descendants","isFemale","nameLength","length","pointRadial","radialX","imageId","hasImage","className","patternUnits","circleRadius","xlinkHref","r","isPartner","strokeDasharray","strokeOpacity","dy","fontFamily","textAnchor","pointerEvents","Fragment","aria-label","title","src","alt","React","Component","Boolean","window","location","hostname","match","rootElement","document","querySelector","ReactDOM","render","offsetWidth","offsetHeight","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.015e2435.chunk.js","sourcesContent":["import React from 'react'\nimport { Group } from '@vx/group'\nimport { Tree } from '@vx/hierarchy'\nimport { LinearGradient } from '@vx/gradient'\nimport { hierarchy } from 'd3-hierarchy'\nimport { pointRadial } from 'd3-shape'\n\nimport {\n  LinkHorizontal,\n  LinkVertical,\n  LinkRadial,\n  LinkHorizontalStep,\n  LinkVerticalStep,\n  LinkRadialStep,\n  LinkHorizontalCurve,\n  LinkVerticalCurve,\n  LinkRadialCurve,\n  LinkHorizontalLine,\n  LinkVerticalLine,\n  LinkRadialLine\n} from '@vx/shape'\n\nconst data = {\n  name: '',\n  children: [\n    {\n      name: 'J A',\n      id: 1,\n      gender: 'Female',\n      hasParnter: true,\n      imageUrl: '/avatar/gravator.jpg'\n    },\n    {\n      name: 'Mr. J A',\n      id: 2,\n      partnerId: 1,\n      noParent: true,\n      children: [\n        {\n          name: 'P A',\n          id: 3,\n          gender: 'Female',\n          isSource: true,\n          hasParnter: true\n        },\n        {\n          name: 'MK N A',\n          id: 5,\n          partnerId: 3,\n          gender: 'Male',\n          noParent: true,\n          children: [\n            {\n              name: 'B K',\n              id: 100,\n              hasParnter: true\n            },\n            {\n              name: 'D MM',\n              id: 102,\n              partnerId: 100,\n              gender: 'Female',\n              noParent: true,\n              children: [{ name: 'D MM', gender: 'Female' }]\n            },\n            {\n              name: 'MM D',\n              id: 102,\n              partnerId: 100,\n              gender: 'Female',\n              noParent: true,\n              children: [{ name: 'B MM' }]\n            },\n            {\n              name: 'V PK',\n              id: 200,\n              gender: 'Female',\n              hasParnter: true,\n              imageUrl: '/avatar/v-pk.jpeg'\n            },\n            {\n              name: 'EK T N',\n              id: 201,\n              partnerId: 200,\n              noParent: true,\n              children: [\n                {\n                  name: 'S PK',\n                  gender: 'Female'\n                },\n                {\n                  name: 'Sku PK'\n                },\n                {\n                  name: 'Sj PK'\n                },\n                {\n                  name: 'Ska PK'\n                }\n              ]\n            },\n\n            {\n              name: 'V K',\n              id: 300,\n              hasParnter: true,\n              imageUrl: '/avatar/v-k.jpeg'\n            },\n            {\n              name: 'M PG',\n              gender: 'Female',\n              id: 301,\n              partnerId: 300,\n              noParent: true,\n              children: [\n                {\n                  name: 'V K',\n                  id: 3001,\n                  imageUrl: '/avatar/v-k-1.jpeg'\n                },\n                {\n                  name: 'V KV'\n                }\n              ]\n            },\n            {\n              name: 'R PK',\n              id: 400,\n              hasParnter: true\n            },\n            {\n              name: 'S VV',\n              gender: 'Female',\n              id: 401,\n              partnerId: 400,\n              noParent: true,\n              children: [\n                {\n                  name: 'A R',\n                  gender: 'Female'\n                },\n                {\n                  name: 'C K'\n                }\n              ]\n            }\n          ]\n        },\n\n        {\n          name: 'Dummy',\n          id: 4,\n          partnerId: 3,\n          gender: 'Male',\n          noParent: true,\n          imageUrl: '/avatar/dummy.png',\n          children: [\n            {\n              name: 'Sam'\n            },\n            {\n              name: 'Thomas'\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n\nexport default class extends React.Component {\n  state = {\n    layout: 'cartesian',\n    orientation: 'horizontal',\n    linkType: 'diagonal',\n    stepPercent: 1,\n    showOptions: false,\n    nodeId: null,\n    nodeName: '',\n    nodeImageUrl: '',\n    treeData: {}\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.showNodeOptions = this.showNodeOptions.bind(this)\n    this.updateTree = this.updateTree.bind(this)\n    this.fetchNodeTree = this.fetchNodeTree.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({ treeData: data })\n  }\n\n  showNodeOptions(node) {\n    const { showOptions } = this.state\n    const imageUrl = node.data && node.data.imageUrl ? node.data.imageUrl : ''\n    const name = node.data && node.data.name ? node.data.name : ''\n    const nodeId = node.data && node.data.id ? node.data.id : ''\n    this.setState({\n      showOptions: !showOptions,\n      nodeImageUrl: imageUrl,\n      nodeName: name,\n      nodeId: nodeId\n    })\n  }\n\n  fetchNodeTree() {\n    const { nodeId, showOptions } = this.state\n    fetch(`/json/${nodeId}.json`)\n      .then(res => {\n        return res.status === 200 ? res.json() : {}\n      })\n      .then(treeData => {\n        this.setState({ treeData: treeData, showOptions: !showOptions }, () => {\n          this.forceUpdate()\n        })\n      })\n      .catch(() => {\n        alert('Invalid request!')\n      })\n  }\n\n  updateTree(node) {\n    node.data.isExpanded = !node.data.isExpanded\n    this.forceUpdate()\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      margin = {\n        top: 30,\n        left: 30,\n        right: 30,\n        bottom: 30\n      }\n    } = this.props\n    let partners = []\n    const nameLineHeight = 1.2\n    const fontSize = 9\n\n    const circleRadius = 24\n    const avatarSize = circleRadius * 2\n\n    const {\n      treeData,\n      layout,\n      orientation,\n      linkType,\n      stepPercent,\n      showOptions,\n      nodeImageUrl,\n      nodeName\n    } = this.state\n\n    const innerWidth = width - margin.left - margin.right\n    const innerHeight = height - margin.top - margin.bottom\n\n    let origin\n    let sizeWidth\n    let sizeHeight\n\n    if (layout === 'polar') {\n      origin = {\n        x: innerWidth / 2,\n        y: innerHeight / 2\n      }\n      sizeWidth = 2 * Math.PI\n      sizeHeight = Math.min(innerWidth, innerHeight) / 2\n    } else {\n      origin = { x: 0, y: 0 }\n      if (orientation === 'vertical') {\n        sizeWidth = innerWidth\n        sizeHeight = innerHeight\n        /* As root note is hidden, adjust tree's Y positioning */\n        origin.y -= sizeHeight / 10\n      } else {\n        sizeWidth = innerHeight\n        sizeHeight = innerWidth\n        /* As root note is hidden, adjust tree's X positioning */\n        origin.x -= sizeHeight / 10\n      }\n    }\n\n    let LinkComponent\n\n    if (layout === 'polar') {\n      if (linkType === 'step') {\n        LinkComponent = LinkRadialStep\n      } else if (linkType === 'curve') {\n        LinkComponent = LinkRadialCurve\n      } else if (linkType === 'line') {\n        LinkComponent = LinkRadialLine\n      } else {\n        LinkComponent = LinkRadial\n      }\n    } else {\n      if (orientation === 'vertical') {\n        if (linkType === 'step') {\n          LinkComponent = LinkVerticalStep\n        } else if (linkType === 'curve') {\n          LinkComponent = LinkVerticalCurve\n        } else if (linkType === 'line') {\n          LinkComponent = LinkVerticalLine\n        } else {\n          LinkComponent = LinkVertical\n        }\n      } else {\n        if (linkType === 'step') {\n          LinkComponent = LinkHorizontalStep\n        } else if (linkType === 'curve') {\n          LinkComponent = LinkHorizontalCurve\n        } else if (linkType === 'line') {\n          LinkComponent = LinkHorizontalLine\n        } else {\n          LinkComponent = LinkHorizontal\n        }\n      }\n    }\n\n    return (\n      <div>\n        <div style={{ color: 'rgba(38, 150, 136, 1.000)', fontSize: 10 }}>\n          <label>layout:</label>\n          <select\n            onClick={e => e.stopPropagation()}\n            onChange={e => this.setState({ layout: e.target.value })}\n            value={layout}\n          >\n            <option value=\"cartesian\">cartesian</option>\n            <option value=\"polar\">polar</option>\n          </select>\n\n          <label>orientation:</label>\n          <select\n            onClick={e => e.stopPropagation()}\n            onChange={e => this.setState({ orientation: e.target.value })}\n            value={orientation}\n            disabled={layout === 'polar'}\n          >\n            <option value=\"vertical\">vertical</option>\n            <option value=\"horizontal\">horizontal</option>\n          </select>\n\n          <label>link:</label>\n          <select\n            onClick={e => e.stopPropagation()}\n            onChange={e => this.setState({ linkType: e.target.value })}\n            value={linkType}\n          >\n            <option value=\"diagonal\">diagonal</option>\n            <option value=\"step\">step</option>\n            <option value=\"curve\">curve</option>\n            <option value=\"line\">line</option>\n          </select>\n\n          <label>step:</label>\n          <input\n            onClick={e => e.stopPropagation()}\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.1}\n            onChange={e => this.setState({ stepPercent: e.target.value })}\n            value={stepPercent}\n            disabled={linkType !== 'step' || layout === 'polar'}\n          />\n        </div>\n        <svg width={width} height={height}>\n          {/* LinearGradient - lgFemale - Pink gradient */}\n          <LinearGradient id=\"lgFemale\" from=\"#fd9b93\" to=\"#fe6e9e\" />\n          {/* LinearGradient - lgMale - Green gradient */}\n          <LinearGradient id=\"lgMale\" from=\"#13ea58\" to=\"#059a35\" />\n          {/* LinearGradient - lgSpouse - Yellow gradient */}\n          <LinearGradient id=\"lgSpouse\" from=\"#f3f3a7\" to=\"#ffff00\" />\n          <rect width={width} height={height} rx={0} fill=\"#272b4d\" />\n          <Group top={margin.top} left={margin.left}>\n            <Tree\n              root={hierarchy(treeData, d =>\n                d.isExpanded ? null : d.children\n              )}\n              size={[sizeWidth, sizeHeight]}\n              separation={(a, b) =>\n                (a.parent === b.parent ? 0.5 : 0.75) / a.depth\n              }\n            >\n              {data => (\n                <Group top={origin.y} left={origin.x}>\n                  {data.links().map((link, i) => {\n                    if (link.target.data.hasParnter) {\n                      partners.push(link.target)\n                    }\n                    /* Do not show the link from root empty object */\n                    if (link.source.depth === 0) {\n                      return null\n                    }\n                    if (link.target.data.noParent === true) {\n                      return null\n                    }\n\n                    return (\n                      <LinkComponent\n                        data={link}\n                        percent={+stepPercent}\n                        stroke=\"#374469\"\n                        strokeWidth=\"1\"\n                        fill=\"none\"\n                        key={i}\n                      />\n                    )\n                  })}\n                  {/* Draw Partners Line */}\n                  {data.links().map((link, i) => {\n                    if (typeof link.target.data.partnerId !== 'number') {\n                      return null\n                    }\n                    const nodePartnerId = link.target.data.partnerId\n\n                    const linkSource = partners.filter(partner => {\n                      return partner.data.id === nodePartnerId ? partner : null\n                    })\n\n                    link.source = linkSource[0]\n\n                    return link.source !== undefined ? (\n                      <LinkComponent\n                        data={link}\n                        percent={+stepPercent}\n                        stroke=\"#374469\"\n                        strokeWidth=\"1\"\n                        fill=\"none\"\n                        key={i}\n                      />\n                    ) : null\n                  })}\n\n                  {data.descendants().map((node, key) => {\n                    /* Do not show the empty root object */\n                    if (node.depth === 0) {\n                      return null\n                    }\n                    const gender = node.data.gender\n                    const isFemale = gender === 'Female' ? true : false\n                    const name = node.data.name || ''\n                    const nameLength = name.length * 4\n\n                    let top\n                    let left\n                    if (layout === 'polar') {\n                      const [radialX, radialY] = pointRadial(node.x, node.y)\n                      top = radialY\n                      left = radialX\n                    } else {\n                      if (orientation === 'vertical') {\n                        top = node.y\n                        left = node.x\n                      } else {\n                        top = node.x\n                        left = node.y\n                      }\n                    }\n                    const isSource = node.data.isSource\n                    const imageId = 'image_' + key\n                    const imageUrl = node.data.imageUrl\n                    const hasImage = imageUrl !== undefined && imageUrl !== ''\n                    return (\n                      <Group\n                        top={top}\n                        left={left}\n                        key={key}\n                        className={isSource !== true ? 'node-group' : ''}\n                        onClick={() => {\n                          return isSource !== true\n                            ? this.showNodeOptions(node)\n                            : void 0\n                        }}\n                      >\n                        {hasImage === true && imageUrl !== '' && (\n                          <defs>\n                            <pattern\n                              id={imageId}\n                              x={circleRadius}\n                              y={circleRadius}\n                              patternUnits=\"userSpaceOnUse\"\n                              height={avatarSize}\n                              width={avatarSize}\n                            >\n                              <image x=\"0\" y=\"0\" xlinkHref={imageUrl} />\n                            </pattern>\n                          </defs>\n                        )}\n                        <circle\n                          r={circleRadius}\n                          fill={\n                            hasImage\n                              ? \"url('#\" + imageId + \"')\"\n                              : isSource\n                              ? isFemale\n                                ? \"url('#lgFemale')\"\n                                : \"url('#lgMale')\"\n                              : node.data.isPartner !== true\n                              ? '#272b4d'\n                              : \"url('#lgSpouse')\"\n                          }\n                          className={\n                            !isSource\n                              ? 'node ' + (isFemale ? 'female' : 'male')\n                              : ''\n                          }\n                          strokeWidth={1}\n                          strokeDasharray={\n                            !node.data.children && !node.data.hasParnter\n                              ? '2,2'\n                              : '0'\n                          }\n                          strokeOpacity={1}\n                        />\n                        )}\n                        <rect\n                          y={-nameLineHeight + fontSize / 2}\n                          x={-nameLength}\n                          height={fontSize * 2}\n                          width={nameLength * 2}\n                          className=\"node-text-bg\"\n                          rx=\"5\"\n                        />\n                        <text\n                          dy={circleRadius - fontSize}\n                          fontSize={fontSize}\n                          fontFamily=\"Arial\"\n                          textAnchor={'middle'}\n                          style={{ pointerEvents: 'none' }}\n                          className=\"node\"\n                        >\n                          {name}\n                        </text>\n                      </Group>\n                    )\n                  })}\n                </Group>\n              )}\n            </Tree>\n          </Group>\n        </svg>\n        {showOptions === true && (\n          <React.Fragment>\n            <div id=\"test\" className=\"modal is-active\">\n              <div\n                className=\"modal-background\"\n                onClick={this.showNodeOptions}\n              />\n              <div className=\"modal-card\">\n                <header className=\"modal-card-head\">\n                  <p className=\"modal-card-title\">What next?</p>\n                  <button\n                    className=\"delete\"\n                    aria-label=\"close\"\n                    onClick={this.showNodeOptions}\n                    title=\"Close\"\n                  />\n                </header>\n                <section className=\"modal-card-body\">\n                  <div className=\"content\">\n                    Do you want to see the family tree of the member{' '}\n                    <img\n                      src={nodeImageUrl}\n                      width={avatarSize}\n                      height={avatarSize}\n                      alt={nodeName}\n                    />{' '}\n                    <b>{nodeName}</b>?\n                  </div>\n                </section>\n                <footer className=\"modal-card-foot\">\n                  <button\n                    className=\"button is-success is-pulled-right\"\n                    onClick={this.fetchNodeTree}\n                  >\n                    Show Tree\n                  </button>\n                  <button\n                    className=\"button is-pulled-right\"\n                    onClick={this.showNodeOptions}\n                  >\n                    Cancel\n                  </button>\n                </footer>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bulma/css/bulma.css'\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker'\n\nconst rootElement = document.querySelector('#root')\n\nReactDOM.render(\n  <App width={rootElement.offsetWidth} height={rootElement.offsetHeight} />,\n  rootElement\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}